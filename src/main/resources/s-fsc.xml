<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd  
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd  
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.1.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<import resource="s-base.xml"/>
	
	<bean id="comboBean" class="org.ares.app.common.prop.JdbcComboImp" init-method="init">
		<property name="immu_code_sql" value="select fname name,fvalue value,fcontent content from b_code"/>
		<property name="jt" ref="jt"/>
	</bean>

	<bean id="odialect" class="org.ares.app.common.page.dialect.OracleDialect" />
	<bean id="pageQuery" class="org.ares.app.common.page.jt.JdbcPageQueryImp">
		<property name="dialect" ref="odialect" />
		<property name="jt" ref="jt" />
		<property name="npjt" ref="npjt" />
	</bean>
	
	<bean id="dataSecurity" class="org.ares.app.common.security.data.DefaultDataSecurityImp"/>
	
	<bean id="dataStore" class="org.ares.app.common.advice.datastore.WebDataStore" /><!-- in s-mvc.xml -->
		
	<bean id="biz_advice" class="org.ares.app.common.advice.BizMethodAdvice">
		<property name="dataStore" ref="dataStore"/>
		<property name="dataSecurity" ref="dataSecurity"/>
		<property name="pageQuery" ref="pageQuery"/>
	</bean>
	
	<bean id="pollConManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
		<property name="maxTotal" value="10" />
		<property name="defaultMaxPerRoute" value="5" />
	</bean>

	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder" factory-method="create">
		<property name="connectionManager" ref="pollConManager" />
		<!--开启重试-->
        <property name="retryHandler">
            <bean class="org.apache.http.impl.client.DefaultHttpRequestRetryHandler">
                <constructor-arg value="2"/>
                <constructor-arg value="true"/>
            </bean>
        </property>
        <property name="defaultHeaders">
            <list>
                <bean class="org.apache.http.message.BasicHeader">
                    <constructor-arg value="User-Agent"/>
                    <constructor-arg value="Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.16 Safari/537.36"/>
                </bean>
                <bean class="org.apache.http.message.BasicHeader">
                    <constructor-arg value="Accept-Encoding"/>
                    <constructor-arg value="gzip,deflate"/>
                </bean>
                <bean class="org.apache.http.message.BasicHeader">
                    <constructor-arg value="Accept-Language"/>
                    <constructor-arg value="zh-CN"/>
                </bean>
            </list>
        </property>
	</bean>

	<bean id="httpClient" factory-bean="httpClientBuilder" factory-method="build" />

	<bean id="httpCompFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
		<constructor-arg ref="httpClient" />
		<property name="connectTimeout" value="30000" />
		<property name="readTimeout" value="30000" />
	</bean>

	<bean id="simpleFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">  
    	<property name="readTimeout" value="3000"/>  
    	<property name="connectTimeout" value="3000"/>  
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="requestFactory" ref="httpCompFactory"/>
        <property name="messageConverters"> 
            <list> 
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                	<property name="supportedMediaTypes" >
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>text/json;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                	<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>text/json;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
            	</bean>
            	<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean id="marshallingHttpMessageConverter"  class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
			         <property name="marshaller" ref="castorMarshaller" />
			         <property name="unmarshaller" ref="castorMarshaller" />
			         <property name="supportedMediaTypes">
						<list>
							<value>text/xml</value>
							<value>application/xml</value>
						</list>
					 </property>
			    </bean>
            </list> 
        </property> 
    </bean>
    
    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" /><!-- in s-mvc.xml -->
    
	<aop:config>
		<aop:aspect id="sql_aspect" ref="biz_advice">
			<aop:pointcut expression="execution(* ${pointcut.sql}.*(..)) and @annotation(sign)" id="hql_cut"/>
			<aop:around method="sqla2DataAuthHandle" arg-names="sign" pointcut-ref="hql_cut"/>
			<aop:around method="sqla1PageHandle" arg-names="sign" pointcut-ref="hql_cut"/>
		</aop:aspect>
		<aop:aspect id="service_aspect" ref="biz_advice">
			<aop:pointcut expression="execution(* ${pointcut.service}.*(..))" id="service_around_cut"/>
			<aop:pointcut expression="execution(* ${pointcut.service}.*(..)) and target(obj) and @annotation(sign)" id="service_before_cut"/>
			<aop:before method="serviceNameBHandle" arg-names="pjp,obj,sign"  pointcut-ref="service_before_cut" />
			<aop:around method="serviceExceptionHandle" pointcut-ref="service_around_cut"/>
		</aop:aspect>
	</aop:config>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
</beans>